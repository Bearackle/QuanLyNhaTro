/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.admin;

import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Contract_Landlord;
import view.CustomControl.TableCellAction2;
import view.CustomControl.tablecellRenderFor3item;

/**
 *
 * @author Admin
 */
public class ContractLandlord extends javax.swing.JPanel {
    private DefaultTableModel tableModel;
    private TableRowSorter sorter;
    /**
     * Creates new form ContractLandlord
     */
    public ContractLandlord() {
        initComponents();
        txtFilter.setLabelText("Tìm kiếm theo tên");
        tableModel = (DefaultTableModel) table.getModel();
        sorter = new TableRowSorter<>(tableModel);
        txtFilter.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                 initFilter();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                initFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
         }
        });
        table.setRowSorter(sorter);
    }
    public void initDatable(ArrayList<Contract_Landlord> contracts){
         table.getColumnModel().getColumn(5).setCellRenderer(new tablecellRenderFor3item("icon/accept.svg icon/delete.svg icon/edit.svg"));
         tableModel.setRowCount(0);
        for(Contract_Landlord con : contracts){
            tableModel.addRow(new Object[]{"#"+con.getID(),"@"+con.getLandlordID(),con.getSigned_date(),con.getDuration(),con.getStatus()
        });}
        table.setModel(tableModel);
    }
    private void initFilter(){
        RowFilter<DefaultTableModel,Object> rowFilter = null;
        try{
            rowFilter = RowFilter.regexFilter(txtFilter.getText(), 1);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        sorter.setRowFilter(rowFilter);
    }
     public int getSelectionIndex(){
        return table.convertRowIndexToModel(table.getSelectedRow());
    }
    public void setActionListenerFortablebtn(ActionListener listener, ActionListener listener1,ActionListener listener2){
         table.getColumnModel().getColumn(5).setCellEditor(new TableCellAction2(listener,listener1,listener2, "icon/accept.svg icon/delete.svg icon/edit.svg"));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFilter = new view.CustomControl.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Hợp đồng chủ phòng");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Mã chủ thuê", "Ngày ký", "Kỳ Hạn", "Trạng thái", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(40);
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 171, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private view.CustomControl.TextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
